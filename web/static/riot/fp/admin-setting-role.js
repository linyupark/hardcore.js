riot.tag2("role-form",'<section><h2>管理后台 &gt; 设置 &gt; 角色管理 &gt; {role.name?\'修改\':\'添加\'}角色</h2><form class="role"><h4>基础信息</h4><div class="c2"><div class="row"><p><label>角色名称</label><input type="text" ref="description" riot-value="{role.description}" placeholder="必填"><input-valid ref="validOnSave" for="description" rule="required" msg="必填"></input-valid></p></div></div><div class="c2"><div class="row"><p><label>角色代码</label><input type="text" ref="name" riot-value="{role.name}" placeholder="必填"><input-valid ref="validOnSave" for="name" rule="required" msg="必填"></input-valid></p></div></div><br><h4>设置权限</h4><div class="roles" each="{lv1, n1 in permissionList}"><h5 class="lv1"> {n1+1}.{lv1.label} </h5><div class="child" each="{lv2, n2 in lv1.child}"><label><input if="{lv2.value}" onclick="{fn.choose}" type="checkbox" riot-value="{lv2.value}" checked="{fn.isChoosed(lv2.value)}"> {n1+1}.{n2+1} {lv2.label} </label><div if="{lv2.child}" class="child"><label each="{lv3, n3 in lv2.child}"><input if="{lv3.value}" type="checkbox" onclick="{fn.choose}" riot-value="{lv3.value}" checked="{fn.isChoosed(lv3.value)}"> {n1+1}.{n2+1}.{n3+1} {lv3.label} </label></div></div></div><hr><br><div class="c1 btn-line"><button type="button" onclick="{fn.save}" class="btn-yellow">{app.lang.admin.btn.save}</button><button type="button" onclick="{fn.cancel}" class="btn-gray">{app.lang.admin.btn.back}</button></div></form></section>',"","",function(e){var t=this;t.role={name:t.app.route.params[2]||null,choosed:[]},t.permissionList=[],t.fn={save:function(e){var a=t.role.name?"role-manager/default/update?id="+t.role.name:"role-manager/default/create";t.app.validAll(t.refs.validOnSave).then(function(){t.app.api("POST",a,{trigger:e.target,data:{data:JSON.stringify({name:t.refs.name.value,description:t.refs.description.value,choosed:t.role.choosed})}}).on("done",function(){t.app.alert("角色权限信息保存成功","success"),!t.role.name&&t.app.route("admin-setting-role")})}).catch(function(){t.app.alert("请检查表单","warning")})},cancel:function(){history.back()},getRole:function(){t.app.api("GET","role-manager/default/update",{data:{id:t.role.name}}).on("done",function(e){t.update({role:e})})},getPermissionList:function(){t.app.api("GET","role-manager/default/permission").on("done",function(e){t.update({permissionList:e.items}),t.role.name&&t.fn.getRole()})},isChoosed:function(e){return t.role.choosed.indexOf(e)!==-1},choose:function(e){var a=e.target.value,n=t.role.choosed.indexOf(a)!==-1;a&&e.target.checked&&!n&&t.role.choosed.push(a),!e.target.checked&&n&&t.role.choosed.splice(t.role.choosed.indexOf(a),1)}},t.on("mount",function(){t.fn.getPermissionList()})}),riot.tag2("fp-admin-setting-role",'<header for="admin"></header><main class="admin"><div class="container"><admin-sidenav></admin-sidenav><role-form if="{section==\'add\'}"></role-form><role-form if="{section==\'edit\'}"></role-form><section if="{section==\'index\'}"><h2>管理后台 &gt; 设置 &gt; 角色管理</h2><table-filter for="role"><yield to="addon"><button class="main" onclick="{parent.fn.add}"><i class="icon-plus"></i> 添加角色 </button></yield></table-filter><table class="base"><thead><tr><th width="30%">角色</th><th width="30%">代码</th><th width="10%">数量</th><th width="20%">{app.lang.admin.handle}</th></tr></thead><tbody><tr each="{tableList}"><td>{description}</td><td>{name}</td><td>{sum}</td><td><a href="javascript:;" aria-label="{app.lang.admin.handles.edit}" class="c-tooltip--top"><i onclick="{fn.edit}" class="btn-icon icon-pencil"></i></a><a href="javascript:;" aria-label="{app.lang.admin.handles.remove}" class="c-tooltip--top"><i onclick="{fn.remove}" class="btn-icon icon-trash"></i></a></td></tr><tr if="{!tableList}"><td colspan="4"><spinner-dot></spinner-dot></td></tr></tbody><tfoot if="{tableList}"><tr><td class="left" colspan="4"> {app.lang.admin.counts.items} <b>{items}</b> {app.lang.admin.counts.unit} </td></tr></tfoot></table><pagination-number page="{page}" pages="{pages}" select="y"></pagination-number></section></div></main><footer class="admin"></footer><modal-remove></modal-remove>',"","",function(e){var t=this;t.q=t.app.route.query,t.section=t.app.route.params[1]||"index",t.fn={remove:function(e){t.tags["modal-remove"].once("ok",function(){t.app.api("GET","role-manager/default/delete",{data:{name:e.item.name}}).on("done",function(){t.app.alert("角色删除成功","success"),t.fn.getList()})}).emit("open")},add:function(){t.app.route(t.app.route.path+"/add")},edit:function(e){t.app.route(t.app.route.path+"/edit/"+e.item.name)},getList:function(){t.app.api("GET","role-manager/default/index",{data:{page:t.q.page||1}}).on("done",function(e){t.update({tableList:e.items,page:e.counts.page,pages:e.counts.total_page,items:e.counts.total_items}),t.tags["pagination-number"].emit("render")})}},this.on("mount",function(){"index"===t.section&&(t.fn.getList(),t.tags["pagination-number"].on("change",function(e){t.q.page=e,t.app.query()}))})});